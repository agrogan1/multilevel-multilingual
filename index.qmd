# Multilevel Multilingual

## Introduction

Below, I describe the use of [Stata](https://www.stata.com/), [R](https://www.r-project.org/), and [Julia](https://www.julialang.org/) to estimate multilevel models. Because this document is built by [`Quarto`](https://quarto.org/), I describe calling these programs from within a `Quarto` environment. However, each piece of software could be used individually and separately.

## The Data

The examples use the `simulated_multilevel_data.dta` file from [*Multilevel Thinking*](https://agrogan1.github.io/multilevel-thinking/simulated-multi-country-data.html). Here is a [direct link](https://github.com/agrogan1/multilevel-multilingual/raw/main/simulated_multilevel_data.dta) to download the data.

```{r}
#| echo: false
#| output: false

file.copy("../multilevel-thinking/simulate-and-analyze-multilevel-data/simulated_multilevel_data.dta", 
          ".",
          overwrite = TRUE) # copy over most recent version

```

```{r}
#| echo: false
#| label: tbl-multilingual1
#| tbl-cap: Sample of Simulated Multilevel Data

library(haven) # read Stata

library(pander) # nice tables

df <- read_dta("simulated_multilevel_data.dta") # read in data

pander(head(df)) # nice table

```

## The Equation

$$\text{outcome}_{ij}= \beta_0 + \beta_1 \text{warmth}_{ij} + \beta_2 \text{physical punishment}_{ij} + \\ \beta_3 \text{group}_{ij} + \beta_4 \text{HDI}_{ij} + \\ u_{0j} + u_{1j} \times \text{warmth}_{ij} + e_{ij}$$ {#eq-MLMsubstantive}
   
## Setup 

::: {.panel-tabset group="language"}

### Stata

I need to use the library `Statamarkdown` to call Stata, or I could run Stata on its own

```{r}

library(Statamarkdown)

```

::: {.callout-tip collapse="true"}
#### Tip For Running Stata From Quarto

Because I am running Stata from inside a Quarto document, and running Stata in multiple chunks, I need to use the `collectcode=TRUE` option in the first Stata chunk. i.e. my Quarto chunk needs to begin with ````{stata, collectcode=TRUE}`

See Doug Hemken's excellent documentation on `Statamarkdown` [here](https://www.ssc.wisc.edu/~hemken/Stataworkshops/Statamarkdown/linking-code-blocks.html#linking-code-blocks-1).
:::

### R

In R, I use the library `lme4` to run multilevel models. 

```{r}

library(lme4) 

```

### Julia

I need to call Julia from R.

```{r}

library(JuliaCall)

# OS dependent location of Julia

switch(Sys.info()[['sysname']],
       Windows= {julia_setup(JULIA_HOME = "C:/Users/agrogan/AppData/Local/Programs/Julia-1.10.2/bin")},
       Darwin = {julia_setup(JULIA_HOME = "/Applications/Julia-1.8.app/Contents/Resources/julia/bin")})

```

:::

## An Introduction To Equations and Syntax

To explain statistical syntax for each software, I consider the more general case of a multilevel model with dependent variable `y`, independent variables `x` and `z`, clustering variable `group`, and a random slope for `x`. *i* is the index for the person, while *j* is the index for the `group`.

$$y = \beta_0 + \beta_1 x_{ij} + \beta_2 z_{ij} + u_{0j} + u_{1j} \times x_{ij} + e_{ij}$$ {#eq-MLMsimple}

::: {.panel-tabset group="language"}

### Stata

In Stata `mixed`, the syntax for a multilevel model of the form described in @eq-MLMsimple is:

`mixed y x || group: x`


### R

In R `lme4`, the general syntax for a multilevel model of the form described in @eq-MLMsimple is:

`lmer(y ~ x + z + (1 + x || group), data = ...)`


### Julia

In Julia `MixedModels`, the general syntax for a multilevel model of the form described in @eq-MLMsimple is:

`fit(MixedModel, @formula(y ~ x + z + (1 + x | group)), data)`

:::

