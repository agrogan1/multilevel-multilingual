# Descriptive Statistics

```{r}
#| label: unconditionalsetup
#| echo: false
#| output: false

library(Statamarkdown)

library(lme4) 

library(JuliaCall)

julia_setup(JULIA_HOME = "/Applications/Julia-1.8.app/Contents/Resources/julia/bin")

```

## Descriptive Statistics

::: {.panel-tabset group="language"}

### Stata

```{stata, collectcode=TRUE}

use simulated_multilevel_data.dta // use data

```

```{stata, collectcode=TRUE}

summarize outcome warmth physical_punishment HDI

tabulate group

```

### R 

```{r}

library(haven) # read data in Stata format

df <- read_dta("simulated_multilevel_data.dta")

```

R's descriptive statistics functions rely heavily on whether a variable is a *numeric* variable, or a *factor* variable. Below, I convert two variables to factors (`factor`) before using `summary`[^skimr] to generate descriptive statistics.

[^skimr]: `skimr` is an excellent new alternative library for generating descriptive statistics in R.

```{r}

df$country <- factor(df$country)

df$group <- factor(df$group)

summary(df)

```

### Julia

```{julia}
#| output: false

using Tables, MixedModels, MixedModelsExtras, StatFiles, DataFrames, CategoricalArrays, DataFramesMeta

df = DataFrame(load("simulated_multilevel_data.dta"))

```

Similarly to R, Julia relies on the idea of *variable type*. I use `transform` to convert the appropriate variables to *categorical* variables. 

```{julia}
#| output: false

@transform!(df, :country = categorical(:country))

@transform!(df, :group = categorical(:group))

```

```{julia}

describe(df)

```

:::
