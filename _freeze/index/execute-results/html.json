{
  "hash": "76ed00d170a228d0b833328d5c1b5bb2",
  "result": {
    "engine": "knitr",
    "markdown": "# Multilevel Multilingual\n\n## Introduction\n\nBelow, I describe the use of [Stata](https://www.stata.com/), [R](https://www.r-project.org/), and [Julia](https://www.julialang.org/) to estimate multilevel models. \n\n::: {.callout-tip}\n## Results Will Vary Slightly\n\nEstimating multilevel models is a complex endeavor. The details of how this is accomplished are beyond the purview of this book. Suffice it to say that across software packages there will be differences in estimation routines, resulting in some numerical differences in the results provided by different software packages. Substantively speaking, however, results should agree across software. \n:::\n\n## The Data\n\nThe examples use the `simulated_multilevel_data.dta` file from [*Multilevel Thinking*](https://agrogan1.github.io/multilevel-thinking/simulated-multi-country-data.html). Here is a [direct link](https://github.com/agrogan1/multilevel-multilingual/raw/main/simulated_multilevel_data.dta) to download the data.\n\n\n::: {.cell}\n\n:::\n\n::: {#tbl-multilingual1 .cell tbl-cap='Sample of Simulated Multilevel Data'}\n::: {.cell-output-display}\n\n-------------------------------------------------------------------------------\n country   HDI   family   id    group   physical_punishment   warmth   outcome \n--------- ----- -------- ----- ------- --------------------- -------- ---------\n    1      69      1      1.1     2              2              3       59.18  \n\n    1      69      2      1.2     2              4              0       61.54  \n\n    1      69      3      1.3     1              4              4       51.87  \n\n    1      69      4      1.4     2              0              6       51.71  \n\n    1      69      5      1.5     2              3              2       55.88  \n\n    1      69      6      1.6     1              5              3       60.78  \n-------------------------------------------------------------------------------\n\n\n:::\n:::\n\n::: {.cell}\n\n:::\n\n\n## An Introduction To Equations and Syntax {#sec-syntax}\n\nTo explain statistical syntax for each software, I consider the general case of a multilevel model with dependent variable `y`, independent variables `x` and `z`, clustering variable `group`, and a random slope for `x`. *i* is the index for the person, while *j* is the index for the `group`.\n\n$$y = \\beta_0 + \\beta_1 x_{ij} + \\beta_2 z_{ij} + u_{0j} + u_{1j} \\times x_{ij} + e_{ij}$$ {#eq-MLMsimple}\n\n::: {.panel-tabset group=\"language\"}\n\n### Stata\n\nIn Stata `mixed`, the syntax for a multilevel model of the form described in @eq-MLMsimple is:\n\n\n::: {.cell}\n\n```{.stata .cell-code}\nmixed y x || group: x\n\n```\n:::\n\n\n### R\n\nIn R `lme4`, the general syntax for a multilevel model of the form described in @eq-MLMsimple is:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(lme4)\n\nlmer(y ~ x + z + (1 + x || group), data = ...)\n```\n:::\n\n\n### Julia\n\nIn Julia `MixedModels`, the general syntax for a multilevel model of the form described in @eq-MLMsimple is:\n\n\n::: {.cell}\n\n```{.julia .cell-code}\nusing MixedModels\n\nfit(MixedModel, @formula(y ~ x + z + (1 + x | group)), data)\n\n```\n:::\n\n\n:::\n\n",
    "supporting": [
      "index_files/figure-html"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}