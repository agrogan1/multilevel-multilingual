{
  "hash": "7876ef4e0a1aa585d4a54f217816d564",
  "result": {
    "engine": "knitr",
    "markdown": "# Descriptive Statistics\n\n\n\n::: {.cell}\n\n:::\n\n\n\n## Descriptive Statistics\n\n::: {.panel-tabset group=\"language\"}\n\n### Stata\n\n\n\n::: {.cell collectcode='true'}\n\n```{.stata .cell-code}\n\nuse simulated_multilevel_data.dta // use data\n\n```\n:::\n\n\n\nWe use `summarize` for *continuous* variables, and `tabulate` for *categorical* variables. \n\n\n\n::: {.cell collectcode='true'}\n\n```{.stata .cell-code}\n\nsummarize outcome warmth physical_punishment HDI\n\ntabulate group\n\n```\n\n\n::: {.cell-output .cell-output-stdout}\n\n```\n    Variable |        Obs        Mean    Std. dev.       Min        Max\n-------------+---------------------------------------------------------\n     outcome |      3,000    53.46757     6.65179   33.39014   76.75101\n      warmth |      3,000    3.524333    1.889956          0          7\nphysical_p~t |      3,000    2.494667    1.380075          0          5\n         HDI |      3,000    64.76667    17.24562         33         87\n\n\n  arbitrary |\n      group |\n   variable |      Freq.     Percent        Cum.\n------------+-----------------------------------\n          1 |      1,507       50.23       50.23\n          2 |      1,493       49.77      100.00\n------------+-----------------------------------\n      Total |      3,000      100.00\n```\n\n\n:::\n:::\n\n\n\n### R \n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(haven) # read data in Stata format\n\ndf <- read_dta(\"simulated_multilevel_data.dta\")\n```\n:::\n\n\n\nR's descriptive statistics functions rely heavily on whether a variable is a *numeric* variable, or a *factor* variable. Below, I convert two variables to factors (`factor`) before using `summary`[^skimr] to generate descriptive statistics.\n\n[^skimr]: `skimr` is an excellent new alternative library for generating descriptive statistics in R.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf$country <- factor(df$country)\n\ndf$group <- factor(df$group)\n\nsummary(df)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n    country          HDI            family            id            group   \n 1      : 100   Min.   :33.00   Min.   :  1.00   Length:3000        1:1507  \n 2      : 100   1st Qu.:53.00   1st Qu.: 25.75   Class :character   2:1493  \n 3      : 100   Median :70.00   Median : 50.50   Mode  :character           \n 4      : 100   Mean   :64.77   Mean   : 50.50                              \n 5      : 100   3rd Qu.:81.00   3rd Qu.: 75.25                              \n 6      : 100   Max.   :87.00   Max.   :100.00                              \n (Other):2400                                                               \n physical_punishment     warmth         outcome     \n Min.   :0.000       Min.   :0.000   Min.   :33.39  \n 1st Qu.:2.000       1st Qu.:2.000   1st Qu.:48.78  \n Median :3.000       Median :4.000   Median :53.64  \n Mean   :2.495       Mean   :3.524   Mean   :53.47  \n 3rd Qu.:3.250       3rd Qu.:5.000   3rd Qu.:58.06  \n Max.   :5.000       Max.   :7.000   Max.   :76.75  \n                                                    \n```\n\n\n:::\n:::\n\n\n\n### Julia\n\n\n\n::: {.cell}\n\n```{.julia .cell-code}\nusing Tables, MixedModels, MixedModelsExtras, StatFiles, DataFrames, CategoricalArrays, DataFramesMeta\n\ndf = DataFrame(load(\"simulated_multilevel_data.dta\"))\n```\n:::\n\n\n\nSimilarly to R, Julia relies on the idea of *variable type*. I use `transform` to convert the appropriate variables to *categorical* variables. \n\n\n\n::: {.cell}\n\n```{.julia .cell-code}\n@transform!(df, :country = categorical(:country))\n\n@transform!(df, :group = categorical(:group))\n```\n:::\n\n::: {.cell}\n\n```{.julia .cell-code}\n\ndescribe(df) # descriptive statistics\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n8×7 DataFrame\n Row │ variable             mean     min      median   max     nmissing  eltyp ⋯\n     │ Symbol               Union…   Any      Union…   Any     Int64     Union ⋯\n─────┼──────────────────────────────────────────────────────────────────────────\n   1 │ country                       1.0               30.0           0  Union ⋯\n   2 │ HDI                  64.7667  33.0     70.0     87.0           0  Union\n   3 │ family               50.5     1.0      50.5     100.0          0  Union\n   4 │ id                            1.1               9.99           0  Union\n   5 │ group                         1.0               2.0            0  Union ⋯\n   6 │ physical_punishment  2.49467  0.0      3.0      5.0            0  Union\n   7 │ warmth               3.52433  0.0      4.0      7.0            0  Union\n   8 │ outcome              53.4676  33.3901  53.6426  76.751         0  Union\n                                                                1 column omitted\n```\n\n\n:::\n:::\n\n\n\n:::\n",
    "supporting": [
      "descriptives-multilingual_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {
      "knitr": [
        "{\"type\":\"list\",\"attributes\":{},\"value\":[]}"
      ]
    },
    "preserve": null,
    "postProcess": false
  }
}