{
  "hash": "095aca2b90ca783f692bb4920eef29f8",
  "result": {
    "engine": "knitr",
    "markdown": "# Reshaping Data {#sec-reshape}\n\n## Introduction\n\nCross-sectional analyses (@sec-crosssectional) make use of data in *wide* format: every row is a person, or family, and every person, or family, has a single row of data.\n\nLongitudinal analyses (@sec-longitudinal) make use of *long* data: every row is a person-timepoint, or family-timepoint, and every person, or family, has multiple rows of data.\n\nData therefore sometimes need to be *reshaped*, most often from *wide* format to *long* format. Almost any software that is capable of estimating multilevel models is capable of reshaping data. \n\nBelow, I detail the procedure for reshaping data in Stata and R. \n\n\n\n::: {.cell}\n\n:::\n\n\n\n\n## Data in Wide Format\n\n::: {.callout-note}\nThe data below are in *wide* format.\n\nEvery individual in the data set has a *single row of data*. Every row in the data set is an *individual* or *family*.\n:::\n\n\n\n::: {.cell}\n\n:::\n\n::: {#tbl-reshapewidedata .cell tbl-cap='Data in Wide Format'}\n::: {.cell-output-display}\n\n--------------------------------------------------------------------------\n  id     physical_punishment1   warmth1   outcome1   physical_punishment2 \n------- ---------------------- --------- ---------- ----------------------\n  1.1             3                3       57.47              3           \n\n 1.10             2                0        62.9              3           \n\n 1.100            2                5       62.71              1           \n\n 1.11             4                4       55.61              2           \n\n 1.12             5                4       41.15              5           \n\n 1.13             4                5       63.66              3           \n--------------------------------------------------------------------------\n\nTable: Table continues below\n\n \n--------------------------------------------------------------------------------\n warmth2   outcome2   physical_punishment3   warmth3   outcome3   country   HDI \n--------- ---------- ---------------------- --------- ---------- --------- -----\n    4       55.06              1                2       58.77        1      69  \n\n    0       56.67              2                0       68.22        1      69  \n\n    4       51.58              2                5       55.51        1      69  \n\n    5        50.9              3                3       48.02        1      69  \n\n    5        45.4              3                4       55.86        1      69  \n\n    3       64.81              3                3        58.3        1      69  \n--------------------------------------------------------------------------------\n\nTable: Table continues below\n\n \n----------------------------------\n family   identity   intervention \n-------- ---------- --------------\n   1         1            0       \n\n   10        1            0       \n\n  100        1            1       \n\n   11        1            1       \n\n   12        0            0       \n\n   13        0            1       \n----------------------------------\n\n\n:::\n:::\n\n\n\n## Data Management\n\nBecause reshaping your data dramatically changes the structure of your data... \n\n1. It is a good idea to have your raw data saved in a location where it will not be changed, and can be retrieved again if the reshape command does not work correctly, or if you simply want to modify your reshaping data workflow.(CF @sec-script-flow)\n2. Usually we want to work with only a *subset* of your data, to keep only the data in which we are interested. \n    - In Stata, the command to keep only variables of interest would be: `keep y x z t`.\n    - In R, one option would be to use the subset function: `mysubset <- subset(mydata, select = c(y, x, z, t))`\n\n## Reshaping Data From Wide To Long\n\nUsually, we are most interested in reshaping data from *wide* to *long*.\n\n::: {.panel-tabset group=\"language\"}\n\n### Stata\n\nIn Stata, I only list variables that vary over time, or are *time varying*. Stata assumes that variables that are *not listed* do *not vary over time*, or are *time invariant*.\n\nNotice also that our *time varying* data are in the *stub-time* format, e.g. `warmth1`, `warmth2`, `physical_punishment1` `physical_punishment2`, etc. Because the variables are named in this way, Stata knows to use the *stub* (e.g. `warmth`) as the variable name, and the numeric value, (e.g. 1, 2, 3) as the timepoint.\n\n> The `id` variable, whatever it is named, has to uniquely identify the observations. A useful Stata command here is `isid`, e.g. `isid id`. If your `id` variable is not unique, it is often due to missing values. `drop if id == .` usually solves the problem (assuming that your `id` variable is indeed named `id`, and not something else).\n\n\n\n\n::: {.cell collectcode='true'}\n\n```{.stata .cell-code}\n\nuse simulated_multilevel_longitudinal_data_WIDE.dta, clear\n\ndescribe\n\nreshape long outcome physical_punishment warmth, i(id) j(wave)\n\n```\n\n\n::: {.cell-output .cell-output-stdout}\n\n```\nContains data from simulated_multilevel_longitudinal_data_WIDE.dta\n Observations:         3,000                  \n    Variables:            15                  3 Jul 2024 14:29\n-------------------------------------------------------------------------------------------\nVariable      Storage   Display    Value\n    name         type    format    label      Variable label\n-------------------------------------------------------------------------------------------\nid              str7    %9s                   unique country family id\nphysical_puni~1 float   %9.0g                 1 physical_punishment\nwarmth1         float   %9.0g                 1 warmth\noutcome1        float   %9.0g                 1 outcome\nphysical_puni~2 float   %9.0g                 2 physical_punishment\nwarmth2         float   %9.0g                 2 warmth\noutcome2        float   %9.0g                 2 outcome\nphysical_puni~3 float   %9.0g                 3 physical_punishment\nwarmth3         float   %9.0g                 3 warmth\noutcome3        float   %9.0g                 3 outcome\ncountry         float   %9.0g                 country id\nHDI             float   %9.0g                 Human Development Index\nfamily          float   %9.0g                 family id\nidentity        float   %9.0g                 hypothetical identity group variable\nintervention    float   %9.0g                 recieved intervention\n-------------------------------------------------------------------------------------------\nSorted by: id\n\n(j = 1 2 3)\n\nData                               Wide   ->   Long\n-----------------------------------------------------------------------------\nNumber of observations            3,000   ->   9,000       \nNumber of variables                  15   ->   10          \nj variable (3 values)                     ->   wave\nxij variables:\n             outcome1 outcome2 outcome3   ->   outcome\nphysical_punishment1 physical_punishment2 physical_punishment3->physical_punishment\n                warmth1 warmth2 warmth3   ->   warmth\n-----------------------------------------------------------------------------\n```\n\n\n:::\n:::\n\n\n\n### R\n\nIn R, I only list variables that vary over time, or are *time varying*. \n\nNotice also that our *time varying* data are in the *stub-time* format, e.g. `warmth1`, `warmth2`, `physical_punishment1` `physical_punishment2`, etc. In order to facilitate reshaping the data, it is helpful in R to insert an underscore (`_`) to separate the *stub* from the *time* variable. \n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(dplyr) # data wrangling\n\nlibrary(tidyr) # tidy (reshape data)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# rename variables with \"_\" separator\n\ndf <- simulated_multilevel_longitudinal_data_WIDE %>%\n  rename(outcome_1 = outcome1,\n         outcome_2 = outcome2,\n         outcome_3 = outcome3,\n         physical_punishment_1 = physical_punishment1,\n         physical_punishment_2 = physical_punishment2,\n         physical_punishment_3 = physical_punishment3,\n         warmth_1 = warmth1,\n         warmth_2 = warmth2,\n         warmth_3 = warmth3) \n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# pivot_longer() to long data\n\ndfL <- df %>%\n  pivot_longer(cols = c(outcome_1,\n                        outcome_2,\n                        outcome_3,\n                        physical_punishment_1,\n                        physical_punishment_2,\n                        physical_punishment_3,\n                        warmth_1,\n                        warmth_2,\n                        warmth_3), \n               names_pattern = \"(.+)_(.+)\",\n               names_to = c(\".value\", \"t\"))\n```\n:::\n\n\n\n:::\n\n## Data in Long Format\n\n::: {.callout-note}\nThe data below are in *long* format.\n\nEvery individual/family in the data set has a *multiple rows of data*. Every row in the data set is an *individual-timepoint* or *family-timepoint*.\n:::\n\n\n\n::: {#tbl-reshapelongdata2 .cell tbl-cap='Data in Long Format'}\n::: {.cell-output-display}\n\n------------------------------------------------------------\n country   HDI   family   id    identity   intervention   t \n--------- ----- -------- ----- ---------- -------------- ---\n    1      69      1      1.1      1            0         1 \n\n    1      69      1      1.1      1            0         2 \n\n    1      69      1      1.1      1            0         3 \n\n    1      69      2      1.2      1            1         1 \n\n    1      69      2      1.2      1            1         2 \n\n    1      69      2      1.2      1            1         3 \n------------------------------------------------------------\n\nTable: Table continues below\n\n \n----------------------------------------\n physical_punishment   warmth   outcome \n--------------------- -------- ---------\n          3              3       57.47  \n\n          3              4       55.06  \n\n          1              2       58.77  \n\n          2              1       50.1   \n\n          3              0       53.31  \n\n          3              1       49.79  \n----------------------------------------\n\n\n:::\n:::\n",
    "supporting": [
      "reshape-multilingual_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {
      "knitr": [
        "{\"type\":\"list\",\"attributes\":{},\"value\":[]}"
      ]
    },
    "preserve": null,
    "postProcess": false
  }
}