# Unconditional Model

## Two Level Model

An *unconditional* multilevel model is a model with no independent variables. One should always run an unconditional model as the first step of a multilevel model in order to get a sense of the way that variation is apportioned in the model across the different levels.

### The Equation

$$\text{outcome}_{ij}= \beta_0 + u_{0j} + e_{ij}$$ {#eq-MLMunconditional}

The Intraclass Correlation Coefficient (ICC) is given by:

$$\text{ICC} = \frac{var(u_{0j})}{var(u_{0j}) + var(e_{ij})}$$ {#eq-ICCunconditional}

In a two level multilevel model, the ICC provides a measure of the proportion of variation attributable to Level 2.

```{r}
#| label: unconditionalsetup
#| echo: false
#| output: false

library(Statamarkdown)

library(lme4) 

library(JuliaCall)

julia_setup(JULIA_HOME = "/Applications/Julia-1.10.app/Contents/Resources/julia/bin")

```

### Run Models

::: {.panel-tabset group="language"}

#### Stata

```{stata, collectcode=TRUE}

use simulated_multilevel_data.dta // use data

```

```{stata, collectcode=TRUE}

mixed outcome || country: id: // unconditional model
  
```

```{stata}
  
estat icc // ICC

```

#### R

```{r}

library(haven)

df <- read_dta("simulated_multilevel_data.dta")

```

```{r}
#| warning: false

library(lme4) # estimate multilevel models

fit0 <- lmer(outcome ~ (1 | country),
             data = df) # unconditional model

summary(fit0)

```

```{r}

library(performance)

performance::icc(fit0) # ICC

```

#### Julia

```{julia}
#| output: false

using Tables, MixedModels, MixedModelsExtras, 
StatFiles, DataFrames, CategoricalArrays, DataFramesMeta

df = DataFrame(load("simulated_multilevel_data.dta"))

```

```{julia}
#| output: false

@transform!(df, :country = categorical(:country))

```

```{julia}

m0 = fit(MixedModel, 
         @formula(outcome ~ (1 | country)), df) # unconditional model

```

```{julia}

icc(m0) # ICC

```

:::

### Interpretation

In each case, the software finds that nearly 8% of the variation in the outcome is explainable by the clustering of the observations in each country.

## Three Level Model

### The Equation

$$\text{outcome}_{ij}= \beta_0 + u_{0j} + v_{0i} + e_{ij}$$ {#eq-MLMunconditional3}

In a three level model, there are two intraclass correlation coefficients [@StataCorp2023]. The formulas for the Intraclass Correlation Coefficient (ICC) are given by [@StataCorp2023]:

$$\text{ICC} = \frac{var(u_{0j})}{var(u_{0j}) + var(v_{0i}) + var(e_{ij})}$$ {#eq-ICCunconditional3A}

Following @StataCorp2023, @eq-ICCunconditional3A is the correlation of responses for person-timepoints from the same country but different persons.

$$\text{ICC} = \frac{var(u_{0j}) + var(v_{0i})}{var(u_{0j}) + var(v_{0i}) + var(e_{ij})}$$ {#eq-ICCunconditional3B}

Again, closely following @StataCorp2023, @eq-ICCunconditional3B is the correlation of responses for person-timepoints from the same country and same person.

### Run Models

::: {.panel-tabset group="language"}

#### Stata

```{stata, collectcode=TRUE}

use simulated_multilevel_longitudinal_data.dta // use data

```

```{stata, collectcode=TRUE}

mixed outcome || country: || id:  // unconditional model
  
```

```{stata}
  
estat icc // ICC

```

#### R

```{r}

library(haven)

dfL <- read_dta("simulated_multilevel_longitudinal_data.dta")

```

```{r}
#| warning: false

library(lme4) # estimate multilevel models

fit0L <- lmer(outcome ~ (1 | country/id),
             data = dfL) # unconditional model

summary(fit0L)

```

```{r}

3.351 / (11.724 + 3.351 + 28.234)

(3.351 + 11.724) / (11.724 + 3.351 + 28.234)

```

#### Julia

```{julia}
#| output: false

using Tables, MixedModels, StatFiles, DataFrames, CategoricalArrays, DataFramesMeta

dfL = DataFrame(load("simulated_multilevel_longitudinal_data.dta"))

```

```{julia}
#| output: false

@transform!(dfL, :country = categorical(:country))

```

```{julia}

m0L = fit(MixedModel, @formula(outcome ~ 
                                 (1 | country) + 
                                 (1 | id)), dfL)

```

```{julia}

3.23190 / (11.72401 + 3.23190 + 28.23426)

(3.23190 + 11.72401) / (11.72401 + 3.23190 + 28.23426)

```

:::

### Interpretation





