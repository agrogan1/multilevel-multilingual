# Cross Sectional Multilevel Models

```{r}
#| label: unconditionalsetup
#| echo: false
#| output: false

library(Statamarkdown)

library(lme4) 

library(JuliaCall)

julia_setup(JULIA_HOME = "/Applications/Julia-1.8.app/Contents/Resources/julia/bin")

```

## The Equation

Recall the general model of @eq-MLMsimple, and the syntax outlined in @sec-syntax. Below in @eq-MLMsubstantive, we consider a more substantive example.

$$\text{outcome}_{ij}= \beta_0 + \beta_1 \text{warmth}_{ij} + \beta_2 \text{physical punishment}_{ij} + \\ \beta_3 \text{group}_{ij} + \beta_4 \text{HDI}_{ij} + \\ u_{0j} + u_{1j} \times \text{warmth}_{ij} + e_{ij}$$ {#eq-MLMsubstantive}

## Run Models

::: {.panel-tabset group="language"}

### Stata

#### Get The Data 

```{stata, collectcode=TRUE}

use simulated_multilevel_data.dta

```

#### Run The Model

```{stata}

mixed outcome warmth physical_punishment group HDI || country: warmth

```

### R

#### Get The Data

```{r}

library(haven)

df <- read_dta("simulated_multilevel_data.dta")

```

#### Run The Model

```{r}
#| warning: false

fit1 <- lmer(outcome ~ warmth + physical_punishment + 
               group + HDI +
               (1 + warmth || country),
             data = df)

summary(fit1)

```

### Julia

#### Get The Data

```{julia}
#| output: false

using Tables, MixedModels, StatFiles, DataFrames, CategoricalArrays, DataFramesMeta

df = DataFrame(load("simulated_multilevel_data.dta"))

```

#### Change Country To Categorical

```{julia}
#| output: false

@transform!(df, :country = categorical(:country))

```

#### Run The Model

```{julia}

m1 = fit(MixedModel, @formula(outcome ~ warmth + physical_punishment + 
               group + HDI +
               (1 + warmth | country)), df)

```


:::





