[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Multilevel Multilingual",
    "section": "",
    "text": "1 Multilevel Multilingual",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Multilevel Multilingual</span>"
    ]
  },
  {
    "objectID": "index.html#introduction",
    "href": "index.html#introduction",
    "title": "Multilevel Multilingual",
    "section": "1.1 Introduction",
    "text": "1.1 Introduction\nBelow, I describe the use of Stata, R, and Julia to estimate multilevel models.\n\n\n\n\n\n\nResults Will Vary Slightly\n\n\n\nEstimating multilevel models is a complex endeavor. The software details of how this is accomplished are beyond the purview of this book. Suffice it to say that across different software packages there will be differences in estimation routines, resulting in some numerical differences in the results provided by different software packages. Substantively speaking, however, results should agree across software.\n\n\n\n\n\n\n\n\nMulti-Line Commands\n\n\n\nSometimes I have written commands out over multiple lines. I have done this for especially long commands, but have also sometimes done this simply for the sake of clarity. The different software packages have different approaches to multi-line commands.\n\nBy default, Stata ends a command at the end of a line. If you are going to write a multi-line command you should use the /// line continuation characters.\nR is the software that most naturally can be written using multiple lines, as R commands are usually clearly encased in parentheses (()) or continued with + signs.\nLike Stata, Julia expects commands to end at the end of a line. If you are going to write a mult-line command, all commands except for the last line should end in a character that clearly indicates continuation, like a + sign. An alternative is to encase the entire Julia command in an outer set of parentheses (()).",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Multilevel Multilingual</span>"
    ]
  },
  {
    "objectID": "index.html#the-data",
    "href": "index.html#the-data",
    "title": "Multilevel Multilingual",
    "section": "1.2 The Data",
    "text": "1.2 The Data\nThe examples use the simulated_multilevel_data.dta file from Multilevel Thinking. Here is a direct link to download the data.\n\n\n\n\nTable 1.1: Sample of Simulated Multilevel Data\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ncountry\nHDI\nfamily\nid\ngroup\nphysical_punishment\nwarmth\noutcome\n\n\n\n\n1\n69\n1\n1.1\n2\n2\n3\n59.18\n\n\n1\n69\n2\n1.2\n2\n4\n0\n61.54\n\n\n1\n69\n3\n1.3\n1\n4\n4\n51.87\n\n\n1\n69\n4\n1.4\n2\n0\n6\n51.71\n\n\n1\n69\n5\n1.5\n2\n3\n2\n55.88\n\n\n1\n69\n6\n1.6\n1\n5\n3\n60.78",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Multilevel Multilingual</span>"
    ]
  },
  {
    "objectID": "index.html#sec-syntax",
    "href": "index.html#sec-syntax",
    "title": "Multilevel Multilingual",
    "section": "1.3 An Introduction To Equations and Syntax",
    "text": "1.3 An Introduction To Equations and Syntax\nTo explain statistical syntax for each software, I consider the general case of a multilevel model with dependent variable y, independent variables x and z, clustering variable group, and a random slope for x. i is the index for the person, while j is the index for the group.\n\\[y = \\beta_0 + \\beta_1 x_{ij} + \\beta_2 z_{ij} + u_{0j} + u_{1j} \\times x_{ij} + e_{ij} \\tag{1.1}\\]\n\nStataRJulia\n\n\nIn Stata mixed, the syntax for a multilevel model of the form described in Equation 1.1 is:\n\nmixed y x || group: x\n\n\n\nIn R lme4, the general syntax for a multilevel model of the form described in Equation 1.1 is:\n\nlibrary(lme4)\n\nlmer(y ~ x + z + (1 + x || group), data = ...)\n\n\n\nIn Julia MixedModels, the general syntax for a multilevel model of the form described in Equation 1.1 is:\n\nusing MixedModels\n\nfit(MixedModel, @formula(y ~ x + z + (1 + x | group)), data)",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Multilevel Multilingual</span>"
    ]
  },
  {
    "objectID": "descriptives-multilingual.html",
    "href": "descriptives-multilingual.html",
    "title": "2  Descriptive Statistics",
    "section": "",
    "text": "2.1 Descriptive Statistics",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Descriptive Statistics</span>"
    ]
  },
  {
    "objectID": "descriptives-multilingual.html#descriptive-statistics",
    "href": "descriptives-multilingual.html#descriptive-statistics",
    "title": "2  Descriptive Statistics",
    "section": "",
    "text": "StataRJulia\n\n\n\n\nuse simulated_multilevel_data.dta // use data\n\nWe use summarize for continuous variables, and tabulate for categorical variables.\n\n\nsummarize outcome warmth physical_punishment HDI\n\ntabulate group\n\n    Variable |        Obs        Mean    Std. dev.       Min        Max\n-------------+---------------------------------------------------------\n     outcome |      3,000    53.46757     6.65179   33.39014   76.75101\n      warmth |      3,000    3.524333    1.889956          0          7\nphysical_p~t |      3,000    2.494667    1.380075          0          5\n         HDI |      3,000    64.76667    17.24562         33         87\n\n\n  arbitrary |\n      group |\n   variable |      Freq.     Percent        Cum.\n------------+-----------------------------------\n          1 |      1,507       50.23       50.23\n          2 |      1,493       49.77      100.00\n------------+-----------------------------------\n      Total |      3,000      100.00\n\n\n\n\n\nlibrary(haven) # read data in Stata format\n\ndf &lt;- read_dta(\"simulated_multilevel_data.dta\")\n\nR’s descriptive statistics functions rely heavily on whether a variable is a numeric variable, or a factor variable. Below, I convert two variables to factors (factor) before using summary1 to generate descriptive statistics.\n\ndf$country &lt;- factor(df$country)\n\ndf$group &lt;- factor(df$group)\n\nsummary(df)\n\n    country          HDI            family            id            group   \n 1      : 100   Min.   :33.00   Min.   :  1.00   Length:3000        1:1507  \n 2      : 100   1st Qu.:53.00   1st Qu.: 25.75   Class :character   2:1493  \n 3      : 100   Median :70.00   Median : 50.50   Mode  :character           \n 4      : 100   Mean   :64.77   Mean   : 50.50                              \n 5      : 100   3rd Qu.:81.00   3rd Qu.: 75.25                              \n 6      : 100   Max.   :87.00   Max.   :100.00                              \n (Other):2400                                                               \n physical_punishment     warmth         outcome     \n Min.   :0.000       Min.   :0.000   Min.   :33.39  \n 1st Qu.:2.000       1st Qu.:2.000   1st Qu.:48.78  \n Median :3.000       Median :4.000   Median :53.64  \n Mean   :2.495       Mean   :3.524   Mean   :53.47  \n 3rd Qu.:3.250       3rd Qu.:5.000   3rd Qu.:58.06  \n Max.   :5.000       Max.   :7.000   Max.   :76.75  \n                                                    \n\n\n\n\n\nusing Tables, MixedModels, MixedModelsExtras, StatFiles, DataFrames, CategoricalArrays, DataFramesMeta\n\ndf = DataFrame(load(\"simulated_multilevel_data.dta\"))\n\nSimilarly to R, Julia relies on the idea of variable type. I use transform to convert the appropriate variables to categorical variables.\n\n@transform!(df, :country = categorical(:country))\n\n@transform!(df, :group = categorical(:group))\n\n\n\ndescribe(df) # descriptive statistics\n\n8×7 DataFrame\n Row │ variable             mean     min      median   max     nmissing  eltyp ⋯\n     │ Symbol               Union…   Any      Union…   Any     Int64     Union ⋯\n─────┼──────────────────────────────────────────────────────────────────────────\n   1 │ country                       1.0               30.0           0  Union ⋯\n   2 │ HDI                  64.7667  33.0     70.0     87.0           0  Union\n   3 │ family               50.5     1.0      50.5     100.0          0  Union\n   4 │ id                            1.1               9.99           0  Union\n   5 │ group                         1.0               2.0            0  Union ⋯\n   6 │ physical_punishment  2.49467  0.0      3.0      5.0            0  Union\n   7 │ warmth               3.52433  0.0      4.0      7.0            0  Union\n   8 │ outcome              53.4676  33.3901  53.6426  76.751         0  Union\n                                                                1 column omitted",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Descriptive Statistics</span>"
    ]
  },
  {
    "objectID": "descriptives-multilingual.html#footnotes",
    "href": "descriptives-multilingual.html#footnotes",
    "title": "2  Descriptive Statistics",
    "section": "",
    "text": "skimr is an excellent new alternative library for generating descriptive statistics in R.↩︎",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Descriptive Statistics</span>"
    ]
  },
  {
    "objectID": "unconditional-multilingual.html",
    "href": "unconditional-multilingual.html",
    "title": "3  Unconditional Model",
    "section": "",
    "text": "3.1 The Equation\n\\[\\text{outcome}_{ij}= \\beta_0 + u_{0j} + e_{ij} \\tag{3.1}\\]\nThe Intraclass Correlation Coefficient (ICC) is given by:\n\\[\\text{ICC} = \\frac{var(u_{0j})}{var(u_{0j}) + var(e_{ij})} \\tag{3.2}\\]\nIn a two level multilevel model, the ICC provides a measure of the amount of variation attributable to Level 2.",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Unconditional Model</span>"
    ]
  },
  {
    "objectID": "unconditional-multilingual.html#run-models",
    "href": "unconditional-multilingual.html#run-models",
    "title": "3  Unconditional Model",
    "section": "3.2 Run Models",
    "text": "3.2 Run Models\n\nStataRJulia\n\n\n\n\nuse simulated_multilevel_data.dta // use data\n\n\n\nmixed outcome || country: // unconditional model\n  \n\nPerforming EM optimization ...\n\nPerforming gradient-based optimization: \nIteration 0:  Log likelihood = -9856.1548  \nIteration 1:  Log likelihood = -9856.1548  \n\nComputing standard errors ...\n\nMixed-effects ML regression                           Number of obs    = 3,000\nGroup variable: country                               Number of groups =    30\n                                                      Obs per group:\n                                                                   min =   100\n                                                                   avg = 100.0\n                                                                   max =   100\n                                                      Wald chi2(0)     =     .\nLog likelihood = -9856.1548                           Prob &gt; chi2      =     .\n\n------------------------------------------------------------------------------\n     outcome | Coefficient  Std. err.      z    P&gt;|z|     [95% conf. interval]\n-------------+----------------------------------------------------------------\n       _cons |   53.46757   .3539097   151.08   0.000     52.77392    54.16122\n------------------------------------------------------------------------------\n\n------------------------------------------------------------------------------\n  Random-effects parameters  |   Estimate   Std. err.     [95% conf. interval]\n-----------------------------+------------------------------------------------\ncountry: Identity            |\n                  var(_cons) |   3.348734   .9702594      1.897816    5.908906\n-----------------------------+------------------------------------------------\n               var(Residual) |   40.88284   1.060908       38.8555    43.01597\n------------------------------------------------------------------------------\nLR test vs. linear model: chibar2(01) = 169.64        Prob &gt;= chibar2 = 0.0000\n\n\n\n  \nestat icc // ICC\n\nIntraclass correlation\n\n------------------------------------------------------------------------------\n                       Level |        ICC   Std. err.     [95% conf. interval]\n-----------------------------+------------------------------------------------\n                     country |   .0757091   .0203761      .0442419    .1265931\n------------------------------------------------------------------------------\n\n\n\n\n\nlibrary(haven)\n\ndf &lt;- read_dta(\"simulated_multilevel_data.dta\")\n\n\nlibrary(lme4) # estimate multilevel models\n\nfit0 &lt;- lmer(outcome ~ (1 | country),\n             data = df) # unconditional model\n\nsummary(fit0)\n\nLinear mixed model fit by REML ['lmerMod']\nFormula: outcome ~ (1 | country)\n   Data: df\n\nREML criterion at convergence: 19712.5\n\nScaled residuals: \n     Min       1Q   Median       3Q      Max \n-2.97650 -0.68006  0.00936  0.67580  3.03510 \n\nRandom effects:\n Groups   Name        Variance Std.Dev.\n country  (Intercept)  3.478   1.865   \n Residual             40.883   6.394   \nNumber of obs: 3000, groups:  country, 30\n\nFixed effects:\n            Estimate Std. Error t value\n(Intercept)    53.47       0.36   148.5\n\n\n\nlibrary(performance)\n\nperformance::icc(fit0) # ICC\n\n# Intraclass Correlation Coefficient\n\n    Adjusted ICC: 0.078\n  Unadjusted ICC: 0.078\n\n\n\n\n\nusing Tables, MixedModels, MixedModelsExtras, \nStatFiles, DataFrames, CategoricalArrays, DataFramesMeta\n\ndf = DataFrame(load(\"simulated_multilevel_data.dta\"))\n\n\n@transform!(df, :country = categorical(:country))\n\n\n\nm0 = fit(MixedModel, \n         @formula(outcome ~ (1 | country)), df) # unconditional model\n\nLinear mixed model fit by maximum likelihood\n outcome ~ 1 + (1 | country)\n   logLik   -2 logLik     AIC       AICc        BIC    \n -9856.1548 19712.3097 19718.3097 19718.3177 19736.3288\n\nVariance components:\n            Column   Variance Std.Dev.\ncountry  (Intercept)   3.34871 1.82995\nResidual              40.88285 6.39397\n Number of obs: 3000; levels of grouping factors: 30\n\n  Fixed-effects parameters:\n──────────────────────────────────────────────────\n               Coef.  Std. Error       z  Pr(&gt;|z|)\n──────────────────────────────────────────────────\n(Intercept)  53.4676    0.353908  151.08    &lt;1e-99\n──────────────────────────────────────────────────\n\n\n\n\nicc(m0) # ICC\n\n0.07570852291396266",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Unconditional Model</span>"
    ]
  },
  {
    "objectID": "cross-sectional-multilingual.html",
    "href": "cross-sectional-multilingual.html",
    "title": "4  Cross Sectional Model",
    "section": "",
    "text": "4.1 The Equation\nRecall the general model of Equation 1.1, and the syntax outlined in Section 1.3. Below in Equation 4.1, we consider a more substantive example.\n\\[\\text{outcome}_{ij}= \\beta_0 + \\beta_1 \\text{warmth}_{ij} + \\beta_2 \\text{physical punishment}_{ij} + \\\\ \\beta_3 \\text{group}_{ij} + \\beta_4 \\text{HDI}_{ij} + \\\\ u_{0j} + u_{1j} \\times \\text{warmth}_{ij} + e_{ij} \\tag{4.1}\\]",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Cross Sectional Model</span>"
    ]
  },
  {
    "objectID": "cross-sectional-multilingual.html#the-equation",
    "href": "cross-sectional-multilingual.html#the-equation",
    "title": "4  Cross Sectional Model",
    "section": "",
    "text": "StataRJulia\n\n\n\n4.1.1 Get The Data\n\n\nuse simulated_multilevel_data.dta\n\n\n\n4.1.2 Graph\n\ntwoway scatter outcome warmth, ///\n  xtitle(\"warmth\") ytitle(\"outcome\") ///\n  title(\"Outcome by Parental Warmth\") \n\nquietly graph export scatter.png, replace\n\n\n\n\n\n\n\nFigure 4.1: Outcome by Parental Warmth (Stata)\n\n\n\n\n\n4.1.3 Run The Model\n\n\nmixed outcome warmth physical_punishment group HDI || country: warmth\n\nPerforming EM optimization ...\n\nPerforming gradient-based optimization: \nIteration 0:  Log likelihood =  -9668.198  \nIteration 1:  Log likelihood = -9667.9551  \nIteration 2:  Log likelihood = -9667.9534  \nIteration 3:  Log likelihood = -9667.9533  \nIteration 4:  Log likelihood = -9667.9532  \n\nComputing standard errors ...\n\nMixed-effects ML regression                          Number of obs    =  3,000\nGroup variable: country                              Number of groups =     30\n                                                     Obs per group:\n                                                                  min =    100\n                                                                  avg =  100.0\n                                                                  max =    100\n                                                     Wald chi2(4)     = 401.26\nLog likelihood = -9667.9532                          Prob &gt; chi2      = 0.0000\n\n-------------------------------------------------------------------------------------\n            outcome | Coefficient  Std. err.      z    P&gt;|z|     [95% conf. interval]\n--------------------+----------------------------------------------------------------\n             warmth |   .9616447   .0581825    16.53   0.000     .8476091     1.07568\nphysical_punishment |  -.8453802   .0798155   -10.59   0.000    -1.001816   -.6889448\n              group |   1.084344   .2200539     4.93   0.000     .6530461    1.515642\n                HDI |    .010557   .0204522     0.52   0.606    -.0295286    .0506426\n              _cons |   49.87963   1.436612    34.72   0.000     47.06392    52.69534\n-------------------------------------------------------------------------------------\n\n------------------------------------------------------------------------------\n  Random-effects parameters  |   Estimate   Std. err.     [95% conf. interval]\n-----------------------------+------------------------------------------------\ncountry: Independent         |\n                 var(warmth) |   1.83e-06   .0000173      1.76e-14    190.9774\n                  var(_cons) |   3.370262   .9633726      1.924651    5.901676\n-----------------------------+------------------------------------------------\n               var(Residual) |   36.01906   .9346936      34.23291    37.89842\n------------------------------------------------------------------------------\nLR test vs. linear model: chi2(2) = 198.01                Prob &gt; chi2 = 0.0000\n\nNote: LR test is conservative and provided only for reference.\n\n\n\n\n\n\n4.1.4 Load The Needed Packages And Get The Data\n\nlibrary(haven)\n\ndf &lt;- read_dta(\"simulated_multilevel_data.dta\")\n\n\n\n4.1.5 Graph\n\nlibrary(ggplot2)\n\nggplot(df,\n       aes(x = warmth,\n           y = outcome)) +\n  geom_point() +\n  labs(title = \"Outcome by Parental Warmth\")\n\n\n\n\n\n\n\nFigure 4.2: Outcome by Parental Warmth (R)\n\n\n\n\n\n\n\n4.1.6 Run The Model\n\nfit1 &lt;- lmer(outcome ~ warmth + physical_punishment + \n               group + HDI +\n               (1 + warmth || country),\n             data = df)\n\nsummary(fit1)\n\nLinear mixed model fit by REML ['lmerMod']\nFormula: outcome ~ warmth + physical_punishment + group + HDI + ((1 |  \n    country) + (0 + warmth | country))\n   Data: df\n\nREML criterion at convergence: 19350.3\n\nScaled residuals: \n    Min      1Q  Median      3Q     Max \n-3.4496 -0.6807  0.0016  0.6864  3.1792 \n\nRandom effects:\n Groups    Name        Variance  Std.Dev.\n country   (Intercept)  3.611568 1.90041 \n country.1 warmth       0.001876 0.04331 \n Residual              36.049124 6.00409 \nNumber of obs: 3000, groups:  country, 30\n\nFixed effects:\n                    Estimate Std. Error t value\n(Intercept)         49.88754    1.48203  33.662\nwarmth               0.96155    0.05875  16.367\nphysical_punishment -0.84556    0.07986 -10.588\ngroup                1.08471    0.22017   4.927\nHDI                  0.01044    0.02116   0.493\n\nCorrelation of Fixed Effects:\n            (Intr) warmth physc_ group \nwarmth      -0.126                     \nphyscl_pnsh -0.135 -0.025              \ngroup       -0.218 -0.010 -0.019       \nHDI         -0.925 -0.006  0.008 -0.001\n\n\n\n\n\n\n4.1.7 Load The Needed Packages And Get The Data\n\nusing Tables, MixedModels, StatFiles, DataFrames, CategoricalArrays, DataFramesMeta\n\ndf = DataFrame(load(\"simulated_multilevel_data.dta\"))\n\n\n\n4.1.8 Graph\n\nusing StatsPlots\n\n@df df scatter(:outcome, :warmth, \n               title = \"Outcome by Parental Warmth\",\n               ylabel = \"outcome\",\n               xlabel = \"parental warmth\")\n\n\n\n\n\n\n\nFigure 4.3: Outcome by Parental Warmth (Julia)\n\n\n\n\n\n\n\n4.1.9 Change Country To Categorical\n\n@transform!(df, :country = categorical(:country))\n\n\n\n4.1.10 Run The Model\n\n\nm1 = fit(MixedModel, @formula(outcome ~ warmth + physical_punishment + \n               group + HDI +\n               (1 + warmth | country)), df)\n\nLinear mixed model fit by maximum likelihood\n outcome ~ 1 + warmth + physical_punishment + group + HDI + (1 + warmth | country)\n   logLik   -2 logLik     AIC       AICc        BIC    \n -9667.9392 19335.8783 19353.8783 19353.9385 19407.9357\n\nVariance components:\n            Column    Variance   Std.Dev.   Corr.\ncountry  (Intercept)   3.2369484 1.7991521\n         warmth        0.0001080 0.0103903 +1.00\nResidual              36.0187144 6.0015593\n Number of obs: 3000; levels of grouping factors: 30\n\n  Fixed-effects parameters:\n─────────────────────────────────────────────────────────────\n                          Coef.  Std. Error       z  Pr(&gt;|z|)\n─────────────────────────────────────────────────────────────\n(Intercept)          49.9018      1.43435     34.79    &lt;1e-99\nwarmth                0.961545    0.0582135   16.52    &lt;1e-60\nphysical_punishment  -0.845389    0.0798149  -10.59    &lt;1e-25\ngroup                 1.08524     0.220055     4.93    &lt;1e-06\nHDI                   0.0101984   0.0204401    0.50    0.6178\n─────────────────────────────────────────────────────────────\n\n\n\n\n\n\n\n\n\nFigure 4.1: Outcome by Parental Warmth (Stata)\nFigure 4.2: Outcome by Parental Warmth (R)\nFigure 4.3: Outcome by Parental Warmth (Julia)",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Cross Sectional Model</span>"
    ]
  }
]